# Metview Macro

# ExtractCSV_ecPoint.mv extracts the values of ecPoint-Rainfall for the 
# grid-boxes belonging to Ecuador's domain

# INPUT PARAMETERS
BaseDateS = 2020-01-01
BaseDateF = 2020-12-31
BaseTimeS = 0
BaseTimeF = 12
DiscTime = 12
StepF_S = 12
StepF_F = 246
DiscStep = 6
Acc = 12
Git_repo = "/vol/ecpoint/mofp/PhD/Papers2Write/FlashFloods_Ecuador"
FileIN_Emask = "Data/Processed/EcuadorMasks/Emask.grib"
DirIN_PR = "Data/Raw/ecPoint"
DirOUT_PR = "Data/Processed/ecPoint_Emask"
#########################################################################


# Set general parameters
if Acc<10 then
    AccSTR = "00" & Acc
else 
    AccSTR = "0" & Acc
end if 


# Read Ecuador's mask
Emask = read(Git_repo & "/" & FileIN_Emask)
Emask_vals = values(Emask)
Emask_lats = latitudes(Emask)
Emask_lons = longitudes(Emask)
Emask_nonzeros = find(Emask_vals,1,"all") & find(Emask_vals,2,"all") & find(Emask_vals,3,"all")
m = count(Emask_nonzeros)
Regs_mask = nil
Lats_mask = nil
Lons_mask = nil
for i = 1 to m do
    ind = Emask_nonzeros[i]
    Regs_mask = Regs_mask & |round(Emask_vals[ind],2)|
    Lats_mask = Lats_mask & |round(Emask_lats[ind],2)|
    Lons_mask = Lons_mask & |round(Emask_lons[ind],2)|
end for
Lons_mask = Lons_mask - 360


# Post-process the ecPoint-Rainfall forecasts
for TheDate = BaseDateS to BaseDateF do 
    
    TheDateSTR = string(TheDate, "yyyymmdd")
    
    for TheTime = BaseTimeS to BaseTimeF by DiscTime do
    
        if TheTime<10 then
            TheTimeSTR = "0" & TheTime
        else
            TheTimeSTR = TheTime
        end if
        
        DirOUT = Git_repo & "/" & DirOUT_PR & "/" & TheDateSTR & TheTimeSTR 
        shell("mkdir -p " & DirOUT)
        
        for StepF = StepF_S to StepF_F by DiscStep do
        
            StepS = StepF - Acc
            
            if StepF<10 then
                StepFSTR = "00" & StepF
            else if (StepF>=10 and StepF<100) then
                StepFSTR = "0" & StepF
            else    
                StepFSTR = StepF
            end if

            print("Post-processing " & Acc & "-h ecPoint-Rainfall forecasts computed on " & TheDateSTR & " at " & TheTimeSTR & " UTC (t+" & StepS & ",t+" & StepF & ")")
            FileIN = Git_repo & "/" & DirIN_PR & "/" & TheDateSTR & TheTimeSTR & "/Pt_BC_PERC_" & AccSTR & "_" & TheDateSTR & "_" & TheTimeSTR & "_" & StepFSTR & ".grib"
            if exist(FileIN) then 
            
                PR_grib = read(FileIN)
                PR_Emask = nearest_gridpoint(PR_grib,Lats_mask,Lons_mask)
                
                # Saving the ecPoint-Rainfall forecast as .csv files
                FileOUT = DirOUT & "/tp_" & AccSTR & "_" & TheDateSTR & "_" & TheTimeSTR & "_" & StepFSTR & ".csv"
                File_csv = file(FileOUT)
                write(File_csv, "lat,lon,ecPR_P01,ecPR_P02,ecPR_P03,ecPR_P04,ecPR_P05,ecPR_P06,ecPR_P07,ecPR_P08,ecPR_P09,ecPR_P10,ecPR_P11,ecPR_P12,ecPR_P13,ecPR_P14,ecPR_P15,ecPR_P16,ecPR_P17,ecPR_P18,ecPR_P19,ecPR_P20,ecPR_P21,ecPR_P22,ecPR_P23,ecPR_P24,ecPR_P25,ecPR_P26,ecPR_P27,ecPR_P28,ecPR_P29,ecPR_P30,ecPR_P31,ecPR_P32,ecPR_P33,ecPR_P34,ecPR_P35,ecPR_P36,ecPR_P37,ecPR_P38,ecPR_P39,ecPR_P40,ecPR_P41,ecPR_P42,ecPR_P43,ecPR_P44,ecPR_P45,ecPR_P46,ecPR_P47,ecPR_P48,ecPR_P49,ecPR_P50,ecPR_P51,ecPR_P52,ecPR_P53,ecPR_P54,ecPR_P55,ecPR_P56,ecPR_P57,ecPR_P58,ecPR_P59,ecPR_P60,ecPR_P61,ecPR_P62,ecPR_P63,ecPR_P64,ecPR_P65,ecPR_P66,ecPR_P67,ecPR_P68,ecPR_P69,ecPR_P70,ecPR_P71,ecPR_P72,ecPR_P73,ecPR_P74,ecPR_P75,ecPR_P76,ecPR_P77,ecPR_P78,ecPR_P79,ecPR_P80,ecPR_P81,ecPR_P82,ecPR_P83,ecPR_P84,ecPR_P85,ecPR_P86,ecPR_P87,ecPR_P88,ecPR_P89,ecPR_P90,ecPR_P91,ecPR_P92,ecPR_P93,ecPR_P94,ecPR_P95,ecPR_P96,ecPR_P97,ecPR_P98,ecPR_P99",newline)
                for i = 1 to count(PR_Emask[1]) do
                    append(File_csv, Lats_mask[i], ",", Lons_mask[i], ",", 
                    PR_Emask[01][i], ",", PR_Emask[02][i], ",", PR_Emask[03][i], ",", PR_Emask[04][i], ",", PR_Emask[05][i], ",", PR_Emask[06][i], ",", PR_Emask[07][i], ",", PR_Emask[08][i], ",", PR_Emask[09][i], ",", PR_Emask[10][i], ",",
                    PR_Emask[11][i], ",", PR_Emask[12][i], ",", PR_Emask[13][i], ",", PR_Emask[14][i], ",", PR_Emask[15][i], ",", PR_Emask[16][i], ",", PR_Emask[17][i], ",", PR_Emask[18][i], ",", PR_Emask[19][i], ",", PR_Emask[20][i], ",",
                    PR_Emask[21][i], ",", PR_Emask[22][i], ",", PR_Emask[23][i], ",", PR_Emask[24][i], ",", PR_Emask[25][i], ",", PR_Emask[26][i], ",", PR_Emask[27][i], ",", PR_Emask[28][i], ",", PR_Emask[29][i], ",", PR_Emask[30][i], ",",
                    PR_Emask[31][i], ",", PR_Emask[32][i], ",", PR_Emask[33][i], ",", PR_Emask[34][i], ",", PR_Emask[35][i], ",", PR_Emask[36][i], ",", PR_Emask[37][i], ",", PR_Emask[38][i], ",", PR_Emask[39][i], ",", PR_Emask[40][i], ",",
                    PR_Emask[41][i], ",", PR_Emask[42][i], ",", PR_Emask[43][i], ",", PR_Emask[44][i], ",", PR_Emask[45][i], ",", PR_Emask[46][i], ",", PR_Emask[47][i], ",", PR_Emask[48][i], ",", PR_Emask[49][i], ",", PR_Emask[50][i], ",",
                    PR_Emask[51][i], ",", PR_Emask[52][i], ",", PR_Emask[53][i], ",", PR_Emask[54][i], ",", PR_Emask[55][i], ",", PR_Emask[56][i], ",", PR_Emask[57][i], ",", PR_Emask[58][i], ",", PR_Emask[59][i], ",", PR_Emask[60][i], ",",
                    PR_Emask[61][i], ",", PR_Emask[62][i], ",", PR_Emask[63][i], ",", PR_Emask[64][i], ",", PR_Emask[65][i], ",", PR_Emask[66][i], ",", PR_Emask[67][i], ",", PR_Emask[68][i], ",", PR_Emask[69][i], ",", PR_Emask[70][i], ",",
                    PR_Emask[71][i], ",", PR_Emask[72][i], ",", PR_Emask[73][i], ",", PR_Emask[74][i], ",", PR_Emask[75][i], ",", PR_Emask[76][i], ",", PR_Emask[77][i], ",", PR_Emask[78][i], ",", PR_Emask[79][i], ",", PR_Emask[80][i], ",",
                    PR_Emask[81][i], ",", PR_Emask[82][i], ",", PR_Emask[83][i], ",", PR_Emask[84][i], ",", PR_Emask[85][i], ",", PR_Emask[86][i], ",", PR_Emask[87][i], ",", PR_Emask[88][i], ",", PR_Emask[89][i], ",", PR_Emask[90][i], ",",
                    PR_Emask[91][i], ",", PR_Emask[92][i], ",", PR_Emask[93][i], ",", PR_Emask[94][i], ",", PR_Emask[95][i], ",", PR_Emask[96][i], ",", PR_Emask[97][i], ",", PR_Emask[98][i], ",", PR_Emask[99][i],newline)
                end for
                
             end if
            
        end for
    
    end for            

end for